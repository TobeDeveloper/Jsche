####################only for product######################
spring:
    http:
        encoding:
          force: true
          charset: UTF-8
          enabled: true
    datasource:
        schema: schema.sql
        initialize: false
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/jsche?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&createDatabaseIfNotExist=true
        username: root
        password: root

        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        initialSize: 10
        minIdle: 10
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,log4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=7000
server:
    port: 8433
#    ssl:
#      key-store: classpath:jsche.keystore
#      key-store-password: michael
#      key-password: yan
    undertow:
      io-threads: 4
      worker-threads: 20
      buffer-size: 1024
      buffers-per-region: 1024
      direct-buffers: true

themeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML5
    encoding: UTF-8
    content-type: text/html
    cache: false
mybatis:
    type-aliases-package: org.jsche.entity
    mapper-locations: classpath:mapper/*.xml
    executorType: REUSE
logging:
    level:
       org.apache.ibatis: INFO
#    type-handlers-package: org.jsche.config
########################h2 database#######################
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:dbtest
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.show-sql=true